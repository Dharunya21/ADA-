#include <stdio.h>
#include <stdlib.h>


struct Node {
    int data;
    struct Node* next;
};


struct Stack {
    struct Node* top;
};


void initStack(struct Stack* stack) {
    stack->top = NULL;  // The stack starts empty
}

int isEmpty(struct Stack* stack) {
    return stack->top == NULL;
}


void push(struct Stack* stack, int data) {
    struct Node* newNode = (struct Node*)malloc(sizeof(struct Node));
    newNode->data = data;  
    newNode->next = stack->top;  
    stack->top = newNode;  
    printf("%d pushed to stack.\n", data);
}


int pop(struct Stack* stack) {
    if (isEmpty(stack)) {
        printf("Stack is empty. Cannot pop.\n");
        return -1;  
    }
    struct Node* temp = stack->top;  
    int poppedData = temp->data;  
    stack->top = stack->top->next;
    free(temp);  
    return poppedData;  
}

void display(struct Stack* stack) {
    if (isEmpty(stack)) {
        printf("Stack is empty.\n");
        return;
    }
    struct Node* current = stack->top;
    while (current != NULL) {
        printf("%d -> ", current->data);
        current = current->next;
    }
    printf("NULL\n");
}


void displayMenu() {
    printf("\nStack Operations:\n");
    printf("1. Push\n");
    printf("2. Pop\n");
    printf("3. Display\n");
    printf("4. Exit\n");
    printf("Enter your choice: ");
}

int main() {
    struct Stack stack;
    int choice, value;

    initStack(&stack);  

    while (1) {
        displayMenu();  
        scanf("%d", &choice);  

        switch (choice) {
            case 1:
                printf("Enter a value to push: ");
                scanf("%d", &value);
                push(&stack, value);
                break;

            case 2:  
                value = pop(&stack);
                if (value != -1) {
                    printf("Popped: %d\n", value);
                }
                break;

            case 3:  
                printf("Stack contents: ");
                display(&stack);
                break;

            case 4:  
                printf("Exiting program...\n");
                exit(0);  

            default:
                printf("Invalid choice. Please try again.\n");
        }
    }

    return 0;
}
